//
// Prefix header for all source files of the 'AppCreatorLibrary' target in the 'AppCreatorLibrary' project
//

#ifdef __OBJC__
    #import <Foundation/Foundation.h>
    #import <UIKit/UIKit.h>
    #import <SystemConfiguration/SystemConfiguration.h>
    #import <MobileCoreServices/MobileCoreServices.h>

    #import "SMServerError.h"
#endif

#import <DDLog.h>

//#define DEBUG_APP 1

// notifications
#import "SMNotifications.h"

#ifdef DEBUG
static const int ddLogLevel = LOG_LEVEL_VERBOSE;
#else
static const int ddLogLevel = LOG_LEVEL_WARN;
#endif

/**
 Macros
 */

#define ZULA_DEBUG 1

#define UIViewAutoresizingFlexibleAll                       \
                UIViewAutoresizingFlexibleBottomMargin    | \
                UIViewAutoresizingFlexibleHeight          | \
                UIViewAutoresizingFlexibleLeftMargin      | \
                UIViewAutoresizingFlexibleRightMargin     | \
                UIViewAutoresizingFlexibleTopMargin       | \
                UIViewAutoresizingFlexibleWidth

#define UIViewAutoresizingFlexibleMargins                   \
                UIViewAutoresizingFlexibleBottomMargin    | \
                UIViewAutoresizingFlexibleLeftMargin      | \
                UIViewAutoresizingFlexibleRightMargin     | \
                UIViewAutoresizingFlexibleTopMargin

#define UIViewAutoresizingDefault UIViewAutoresizingFlexibleTopMargin | UIViewAutoresizingFlexibleLeftMargin

// iphone 5 detector
#define IS_IPHONE_5 ([UIScreen mainScreen].bounds.size.height == 568.0)

// iOS version detector
#define SYSTEM_VERSION_EQUAL_TO(v)                  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedSame)
#define SYSTEM_VERSION_GREATER_THAN(v)              ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedDescending)
#define SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(v)  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN(v)                 ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN_OR_EQUAL_TO(v)     ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedDescending)

// orientation detector
#define isLandscape() \
([[UIApplication sharedApplication] statusBarOrientation] == UIInterfaceOrientationLandscapeLeft || [[UIApplication sharedApplication] statusBarOrientation] == UIInterfaceOrientationLandscapeRight)
#define isPortrait() \
([[UIApplication sharedApplication] statusBarOrientation] == UIInterfaceOrientationPortrait || [[UIApplication sharedApplication] statusBarOrientation] == UIInterfaceOrientationPortraitUpsideDown)

// iPad/iPhone detector
#define isPad() \
([[UIDevice currentDevice] respondsToSelector:@selector(userInterfaceIdiom)] && \
[[UIDevice currentDevice] userInterfaceIdiom]==UIUserInterfaceIdiomPad)

// retina screen detector
#define isRetina() \
([[UIScreen mainScreen] respondsToSelector:@selector(scale)] && [[UIScreen mainScreen] scale] == 2)
